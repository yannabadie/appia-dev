# üöÄ D√âPLOIEMENT GCP - ORCHESTRATEUR AUTONOME
# ===========================================

# Build configuration pour Cloud Run
FROM python:3.12-slim

# Variables d'environnement
ENV PYTHONUNBUFFERED=1
ENV WORKSPACE_DIR=/app
ENV PORT=8080

# Installer les d√©pendances syst√®me
RUN apt-get update && apt-get install -y \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Cr√©er le r√©pertoire de travail
WORKDIR /app

# Copier les requirements
COPY requirements.txt .
COPY requirements-jarvys-ai.txt .

# Installer les d√©pendances Python
RUN pip install --no-cache-dir -r requirements.txt
RUN pip install --no-cache-dir -r requirements-jarvys-ai.txt

# Installer les d√©pendances sp√©cifiques √† GCP
RUN pip install --no-cache-dir \
    google-cloud-logging \
    google-cloud-secret-manager \
    fastapi \
    uvicorn \
    psutil \
    websockets

# Copier le code source
COPY . .

# Configurer Git (n√©cessaire pour l'orchestrateur)
RUN git config --global user.name "JARVYS-GCP" && \
    git config --global user.email "jarvys@gcp.local"

# Script de d√©marrage
COPY docker/start-gcp.sh /start.sh
RUN chmod +x /start.sh

# Exposer le port
EXPOSE 8080

# Healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/status || exit 1

# Commande de d√©marrage
CMD ["/start.sh"]
