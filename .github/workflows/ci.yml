name: CI

"on":
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      PYTHON_VERSION: "3.12"
      # Secrets ‚Üí Settings ‚ñ∏ Codespaces / Actions ‚ñ∏ Secrets
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      GH_REPO: ${{ github.repository }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      SECRET_ACCESS_TOKEN: ${{ secrets.SECRET_ACCESS_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Install deps + run tests
        run: |
          poetry install
          poetry run pre-commit run --all-files
          PYTHONPATH=src poetry run pytest -q

      # Firewall configuration - MUST be placed after all Copilot and environment setup
      - name: üîí Configure Firewall (Post-Setup)
        run: |
          echo "üîí Configuring firewall with essential GitHub/Copilot allow rules..."

          # Allow essential GitHub domains for Copilot and Actions
          echo "Adding allow rules for GitHub/Copilot domains..."

          # GitHub core domains
          sudo ufw allow out to github.com
          sudo ufw allow out to api.github.com
          sudo ufw allow out to copilot-proxy.githubusercontent.com
          sudo ufw allow out to uploads.github.com
          sudo ufw allow out to objects.githubusercontent.com

          # Essential ports for HTTPS/HTTP
          sudo ufw allow out 443
          sudo ufw allow out 80
          sudo ufw allow out 53  # DNS

          echo "‚úÖ Firewall allow rules configured for GitHub/Copilot connectivity"
          echo "‚ö†Ô∏è  Firewall not activated in CI to avoid workflow disruption"
