name: Deploy JARVYS Dashboard to Supabase

on:
  push:
    branches: [ main ]
    paths:
      - 'supabase/functions/jarvys-dashboard/**'
      - 'supabase/config.toml'
      - 'dashboard/**'
      - '.github/workflows/deploy-dashboard.yml'
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deploy dashboard'
        required: false
        default: false
        type: boolean

env:
  SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
  SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
  SPB_EDGE_FUNCTIONS: ${{ secrets.SPB_EDGE_FUNCTIONS }}

jobs:
  deploy-dashboard:
    runs-on: ubuntu-latest
    name: Deploy JARVYS Dashboard
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4

    - name: 📋 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 🔧 Install Supabase CLI
      run: |
        npm install -g supabase@latest
        supabase --version

    - name: 🔐 Authenticate with Supabase
      run: |
        echo "$SUPABASE_ACCESS_TOKEN" | supabase auth login --token -

    - name: 📁 Verify project structure
      run: |
        echo "🔍 Vérification de la structure du projet..."
        ls -la supabase/functions/jarvys-dashboard/
        
        if [ ! -f "supabase/functions/jarvys-dashboard/index.ts" ]; then
          echo "❌ Edge Function manquante"
          exit 1
        fi
        
        echo "✅ Structure du projet valide"

    - name: 🚀 Deploy Edge Function
      run: |
        echo "🔄 Déploiement de l'Edge Function jarvys-dashboard..."
        
        supabase functions deploy jarvys-dashboard \
          --project-ref $SUPABASE_PROJECT_ID \
          --no-verify-jwt
        
        echo "✅ Déploiement terminé"

    - name: 🔑 Configure secrets
      run: |
        echo "🔐 Configuration des secrets..."
        
        if [ ! -z "$SPB_EDGE_FUNCTIONS" ]; then
          supabase secrets set SPB_EDGE_FUNCTIONS="$SPB_EDGE_FUNCTIONS" \
            --project-ref $SUPABASE_PROJECT_ID
          echo "✅ Secret SPB_EDGE_FUNCTIONS configuré"
        else
          echo "⚠️ Secret SPB_EDGE_FUNCTIONS non défini"
        fi

    - name: 🧪 Test deployment
      run: |
        echo "🧪 Test de l'Edge Function déployée..."
        
        FUNCTION_URL="https://$SUPABASE_PROJECT_ID.supabase.co/functions/v1/jarvys-dashboard"
        
        # Test health check
        echo "Testing health endpoint..."
        curl -f "$FUNCTION_URL/health" || exit 1
        
        # Test API status
        echo "Testing API status..."
        curl -f "$FUNCTION_URL/api/status" || exit 1
        
        echo "✅ Tests réussis"

    - name: 📊 Deployment summary
      run: |
        echo "🎉 JARVYS Dashboard déployé avec succès!"
        echo ""
        echo "🌐 Dashboard URL:"
        echo "   https://$SUPABASE_PROJECT_ID.supabase.co/functions/v1/jarvys-dashboard"
        echo ""
        echo "📚 API Endpoints:"
        echo "   GET  /api/status    - System status"
        echo "   GET  /api/metrics   - Performance metrics"
        echo "   GET  /api/data      - Complete dashboard data"
        echo "   POST /api/chat      - Chat with JARVYS"
        echo "   GET  /health        - Health check"
        echo ""
        echo "🔐 Secrets configurés:"
        echo "   ✅ SPB_EDGE_FUNCTIONS"
        echo ""
        echo "📈 Dashboard en ligne et opérationnel!"

    - name: 📝 Create deployment comment
      if: github.event_name == 'push'
      uses: actions/github-script@v7
      with:
        script: |
          const deploymentUrl = `https://${{ env.SUPABASE_PROJECT_ID }}.supabase.co/functions/v1/jarvys-dashboard`;
          
          github.rest.repos.createCommitComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: context.sha,
            body: `🚀 **JARVYS Dashboard déployé avec succès!**
            
            🌐 **Dashboard:** [${deploymentUrl}](${deploymentUrl})
            
            📊 **APIs disponibles:**
            - \`GET /api/status\` - Statut système
            - \`GET /api/metrics\` - Métriques performance
            - \`GET /api/data\` - Données complètes
            - \`POST /api/chat\` - Chat avec JARVYS
            - \`GET /health\` - Health check
            
            ✅ Déployé sur Supabase Edge Functions`
          });

  notify-on-failure:
    runs-on: ubuntu-latest
    needs: deploy-dashboard
    if: failure()
    steps:
    - name: 📧 Notify deployment failure
      run: |
        echo "❌ Échec du déploiement JARVYS Dashboard"
        echo "🔍 Vérifiez les logs de l'action GitHub pour plus de détails"
        # Ici vous pourriez ajouter une notification Slack, Discord, etc.
